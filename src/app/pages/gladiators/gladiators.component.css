.primary {
  color: var(--color-primary)
}
.accent {
  color: var(--color-accent)
}
.success {
  color: var(--color-success)
}

.container {
  min-width: 350px;
}

.top-container {
  margin-top: 1rem;
  text-align: center;
}

.center-container {
  text-align: center;
  justify-content: center;
  position: relative;
}

.text-container {
  margin-bottom: 1rem;
}

.status-container {
  margin-bottom: 1.7rem;
}

.simulate-container {
  height: 600px;
}

.reset-first-button,
.start-first-button,
.simulation-button {
  margin-top: 0.5rem;
  width: 6rem;
  /* text-align: center;
  margin: auto; */
}

.reset-first-button {
  margin-bottom: 1rem;
}




.battle-button-container {
  margin-top: 0.5rem;
}

/* Stops the button unequally overflowing to the right on smaller screens*/
.battle-button {
  max-width: 100%;
}



.card {
  text-align: center;
  margin-bottom: 1rem;
  border: 1px solid var(--color-primary);
  background-color: var(--color-offwhite);
  color: var(--color-dark);
  box-shadow: rgba(0, 0, 0, 0.2) 0px 20px 30px;
  ;
}

.first-glad {
  animation: first-glad-anim 0.5s ease-in forwards;
}

.winning-glad {
  animation: winning-glad-anim 1.5s ease-in;
}

.losing-glad {
  animation: losing-glad-anim 1.5s ease-in;
}


/* Card slight glow effect */
@keyframes first-glad-anim {
  from {
    border: 1px solid var(--color-primary);
    /* background-color: var(--color-offwhite); */
  }

  to {
    /* background-color: var(--color-background); */
    border: 1px solid var(--color-accent);
  }
}

/* Reversed glow effect */
@keyframes first-glad-anim-reverse {
  from {
    border: 1px solid var(--color-accent);
  }

  to {
    border: 1px solid var(--color-primary);
  }
}

/* Winning flash of green */
@keyframes winning-glad-anim {
  0% {
    border: 1px solid var(--color-accent);
    background-color: var(--color-offwhite);
  }

  50% {
    background-color: var(--color-success);
    border: 1px solid var(--color-primary);
  }

  100% {}
}


/* Winning flash of green */
@keyframes losing-glad-anim {
  0% {
    background-color: var(--color-offwhite);
    border: 1px solid var(--color-warn);
  }

  50% {
    background-color: var(--color-warn);
    border: 1px solid var(--color-warn);
    opacity: 50%;
  }

  100% {
    background-color: var(--color-warn);
    border: 1px solid var(--color-warn);
    opacity: 0%;
  }
}

.hidden {
  visibility: hidden;
}

.vert-connector-container {
  position: relative;
}


.connector-vertical {
  position: absolute;
  width: 0.5em;
  height: 20em;
  background-color: var(--color-primary);

  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
  top: 1em;
}

.connector-vertical:before {
  content: "";
  width: 1.2em;
  height: 1.2em;
  background: var(--color-primary);
  border-radius: 50%;
  position: absolute;
  margin-left: -0.55em;
}

.connector-vertical:after {
  content: "";
  width: 1.2em;
  height: 1.2em;
  background: var(--color-primary);
  border-radius: 50%;
  position: absolute;
  margin-top: 19em;
  margin-left: -0.55em;
}





/*Drag/dropping cursor*/
.grabbable {
  cursor: move;
  /* fallback if grab cursor is unsupported */
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

/* (Optional) Apply a "closed-hand" cursor during drag operation. */
.grabbable:active {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}

/* Drag/Dropping */
.cdk-drag-preview {
  box-sizing: border-box;
  border-radius: 4px;
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
    0 8px 10px 1px rgba(0, 0, 0, 0.14),
    0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.cdk-drag-preview .first-glad {
  animation: first-glad-anim-reverse 0.5s ease-in;
}

.cdk-drag-placeholder {
  opacity: 0;
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.gladiator-list.cdk-drop-list-dragging .card:not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

/* might interfere with drag on mobile firefox? */
/* .gladiator-list.cdk-drop-list-dragging .first-glad:not(.cdk-drag-placeholder) {

  animation: first-glad-anim-reverse 0.5s ease-in;
} */


/* Creates space for game if needed beforehand? */
.placeholder {
  min-height: 27.5em;
}

.first-game-container {
  min-height: 26.5em;
}

/* Changes stroke colour of svg */
.svg-resource ::ng-deep svg path{
  stroke: var(--color-primary);
}

/* Changes size of svg */
.svg-resource ::ng-deep svg{
  width: 200px;
  height: 200px;
}

.half-hr{
  width:50%;
  margin-left:25% ;
  margin-right:25%;
}

highcharts-chart{
  width: 100%; 
  height: 320px; 
  display: block;
}

